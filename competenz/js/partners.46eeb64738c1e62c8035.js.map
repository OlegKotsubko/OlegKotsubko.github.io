{"version":3,"file":"js/partners.46eeb64738c1e62c8035.js","mappings":"mBAAA,SAASA,EAASC,EAAMC,GACtB,MAAMC,EAAMF,EAAKG,WAAWC,cAAc,mBAC1CJ,EAAKK,UAAUC,IAAI,eAEnBJ,EAAIK,UAAYN,EAGlB,SAASO,EAAWR,GAClB,MAAME,EAAMF,EAAKG,WAAWC,cAAc,mBAC1CJ,EAAKK,UAAUI,OAAO,eAEtBP,EAAIK,UAAY,GAGL,MACX,MAAMG,EAAQC,SAASC,eAAe,cAChCC,EAAUF,SAASC,eAAe,gBAClCE,EAAOH,SAASC,eAAe,QAC/BG,EAAOJ,SAASC,eAAe,QAC/BI,EAAQL,SAASC,eAAe,SAChCK,EAAWN,SAASC,eAAe,YACnCM,EAASP,SAASC,eAAe,UAEvCG,EAAKI,iBAAiB,SAAS,IAAMX,EAAWO,KAChDC,EAAMG,iBAAiB,SAAS,IAAMX,EAAWQ,KACjDC,EAASE,iBAAiB,SAAS,IAAMX,EAAWS,KAEpD,MAAMG,EAAgB,uJAEtBN,EAAKK,iBAAiB,UAAU,SAASE,GACvCA,EAAEC,iBACF,IAAIC,EAAOC,KAcX,GAZIJ,EAAcK,KAAKC,OAAOV,EAAMW,OAAOC,gBACzC7B,EAASiB,EAAO,gDAGfD,EAAKY,MAAME,OAAS,GACrB9B,EAASgB,EAAM,kCAGbE,EAASa,SACX/B,EAASkB,EAAU,6BAG+B,IAAjDM,EAAKQ,iBAAiB,gBAAgBF,OAAc,CACrDX,EAAOc,UAAY,kBACnB,MAAMC,EAAU,CACdC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,uBAAwB,OACxB,eAAgB,mBAChB,sBAAuB,oCAEzBC,KAAMC,KAAKC,UAAU,CACnBvB,MAAOA,EAAMW,MACba,aAAa,EACbC,gBAAgB,EAChBC,KAAM,SACN3B,KAAMA,EAAKY,SAIfgB,MAAM,iEAAkEV,GACrEW,MAAMC,IACL,IAAKA,EAAIC,GACP,MAAMC,MAAMF,EAAIG,YAElB,OAAOH,EAAII,UAEZL,MAAK,KACJrB,EAAK2B,QACLxC,EAAMyC,MAAMC,QAAU,OACtBvC,EAAQsC,MAAMC,QAAU,WAEzBC,OAAMnD,IACLoD,QAAQC,MAAMrD,WC3ExBY,I","sources":["webpack://webpack-template/./src/js/components/form.js","webpack://webpack-template/./src/js/partners.js"],"sourcesContent":["function setError(item, text) {\n  const err = item.parentNode.querySelector('.js-input-error')\n  item.classList.add('input-error')\n\n  err.innerHTML = text\n}\n\nfunction clearError(item) {\n  const err = item.parentNode.querySelector('.js-input-error')\n  item.classList.remove('input-error')\n\n  err.innerHTML = ''\n}\n\nconst form = () => {\n  const block = document.getElementById('form-block')\n  const success = document.getElementById('form-success')\n  const form = document.getElementById('form')\n  const name = document.getElementById('name')\n  const email = document.getElementById('email')\n  const checkbox = document.getElementById('checkbox')\n  const submit = document.getElementById('submit')\n\n  name.addEventListener('input', () => clearError(name))\n  email.addEventListener('input', () => clearError(email))\n  checkbox.addEventListener('input', () => clearError(checkbox))\n\n  const emailRegexApp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\n  form.addEventListener('submit', function(e) {\n    e.preventDefault();\n    let that = this\n\n    if(!emailRegexApp.test(String(email.value).toLowerCase())) {\n      setError(email, 'Please write correct email example@gmail.com')\n    }\n\n    if(name.value.length < 2) {\n      setError(name, 'Please write more than 2 chars')\n    }\n\n    if(!checkbox.checked) {\n      setError(checkbox, 'Please confirm this rules')\n    }\n\n    if(that.querySelectorAll('.input-error').length === 0) {\n      submit.innerText = 'Sending data...'\n      const options = {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'X-MailerLite-ApiDocs': 'true',\n          'Content-Type': 'application/json',\n          'X-MailerLite-ApiKey': 'c8f382d8855753652ec8734e6e30fcad'\n        },\n        body: JSON.stringify({\n          email: email.value,\n          resubscribe: false,\n          autoresponders: true,\n          type: 'active',\n          name: name.value\n        })\n      };\n\n      fetch('https://api.mailerlite.com/api/v2/groups/111235856/subscribers', options)\n        .then((res) => {\n          if (!res.ok) {\n            throw Error(res.statusText);\n          }\n          return res.json();\n        })\n        .then(() => {\n          that.reset()\n          block.style.display = \"none\"\n          success.style.display = \"block\"\n        })\n        .catch(err =>{\n          console.error(err);\n        });\n    }\n  })\n}\n\nexport default form\n","import form from \"./components/form\";\n\nform();\n"],"names":["setError","item","text","err","parentNode","querySelector","classList","add","innerHTML","clearError","remove","block","document","getElementById","success","form","name","email","checkbox","submit","addEventListener","emailRegexApp","e","preventDefault","that","this","test","String","value","toLowerCase","length","checked","querySelectorAll","innerText","options","method","headers","Accept","body","JSON","stringify","resubscribe","autoresponders","type","fetch","then","res","ok","Error","statusText","json","reset","style","display","catch","console","error"],"sourceRoot":""}